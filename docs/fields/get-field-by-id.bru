meta {
  name: Get Field by ID
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/fields/{{testFieldUuid}}
  body: none
  auth: bearer
}

auth:bearer {
  token: {{accessToken}}
}

tests {
  test("should return 200 status", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("should return success response", function() {
    expect(res.getBody().success).to.equal(true);
  });
  
  test("should return field data", function() {
    const body = res.getBody();
    expect(body.data).to.have.property('field');
    expect(body.data.field).to.have.property('uuid');
    expect(body.data.field).to.have.property('name');
    expect(body.data.field).to.have.property('type');
    expect(body.data.field).to.have.property('data');
  });
  
  test("should return correct field ID", function() {
    const body = res.getBody();
    expect(body.data.field.uuid).to.equal(bru.getEnvVar("testFieldUuid"));
  });
}